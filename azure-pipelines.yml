# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none 
pr: none


pool:
  vmImage: ubuntu-latest

variables:
- name: Location
  value: 'UkSouth'
- name: ResourceGroup
  value: 'NewDevopsRG'
- name: ImageTemplateName
  value: 'ImageTemplate10MultiDaves'

steps:
- task: AzureCLI@2
  displayName: "Copy Install Script"
  inputs:
    azureSubscription: 'Imagebuildertesting'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az storage blob upload \
                    --account-name davesfslogix \
                   --container-name scripts \
                    --name Install-Applications.ps1 \
                    --file Install-Applications.ps1 --overwrite \

-   task: AzureResourceManagerTemplateDeployment@3
    displayName: "Deploy template"
    continueOnError: true
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Imagebuildertesting'
      subscriptionId: '277f94fc-e069-460c-b519-ed38437f3c35'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(ResourceGroup)'
      location: '$(Location)'
      templateLocation: 'Linked artifact'
      csmFile: 'Win10Multitemplate.json'
      csmParametersFile: 'Win10Multitemplate.parameters.json'
      deploymentMode: 'Incremental'
- task: AzurePowerShell@5
  displayName: "Install Az.Imagebuilder"
  inputs:
    azureSubscription: 'Imagebuildertesting'
    ScriptType: 'InlineScript'
    Inline: 'Install-Module -name Az.ImageBuilder -AllowPrerelease -Force -Scope CurrentUser'
    azurePowerShellVersion: 'LatestVersion'

- task: AzurePowerShell@5
  displayName: "Build Image"
  inputs:
      azureSubscription: 'Imagebuildertesting'
      ScriptType: 'InlineScript'
      Inline: 'Start-AzImageBuilderTemplate -ResourceGroupName $(ResourceGroup) -Name $(ImageTemplateName)'
      azurePowerShellVersion: 'LatestVersion'

- task: AzurePowerShell@5
  displayName: "Remove Template"
  inputs:
      azureSubscription: 'Imagebuildertesting'
      ScriptType: 'InlineScript'
      Inline: 'Remove-AzImageBuilderTemplate -ImageTemplateName $(ImageTemplateName) -ResourceGroupName $(ResourceGroup)'
      azurePowerShellVersion: 'LatestVersion'



